spring:
  application:
    name: GameServerApp

tny:
  app:
    name: GameServerApp
    app-type: game
    scope-type: game
  net:
    bootstrap:
      network:
        server:
          name: game-service
          bind-address: 127.0.0.1:16800
          channel:
            encoder:
              message-body-codec: typeProtobufMessageBodyCodec
              security-keys:
                - abcdefghijklmn
                - opqrstuvwxyz
            decoder:
              message-body-codec: typeProtobufMessageBodyCodec
              security-keys:
                - abcdefghijklmn
                - opqrstuvwxyz
    command:
      processor:
        disruptor:
          setting:
            enable: true
            wait-strategy: blocking
            threads: 4
    endpoint:
      session-keeper-settings:
        user:
          offline-close-delay: 1000
          offline-max-size: 1000
  datasource:
    mongodb:
      setting:
        uri: "${uc.mongodb.uri:mongodb://ucenter:ucenter0626@127.0.0.1:27018/tny-framework-demo?authSource=admin&minPoolSize=4&maxIdleTimeMS=60000}"
        #        uri: "${uc.mongodb.uri:mongodb://ucenter:ucenter0626@192.168.2.103:27017/tny-framework-demo?authSource=admin&minPoolSize=4&maxIdleTimeMS=60000}"
        auto-index-creation: true
    redisson:
      setting:
        host: '${r2.redis.host:127.0.0.1}'
        password: '${r2.redis.password:tNbrH3NSErGd}'
        port: '${r2.redis.post:6379}'
        database: '${r2.redis.db:9}'

  data:
    object-cache:
      recycler:
        scheduled-recycler:
          scheduled:
            recycle-interval-time: 50000
    storage-accessor:
      redisson-accessor:
        accessor:
          table-head: "tny:demo:sever"
    store-executor:
      fork-join:
        enable: true
        idle-interval: 3000
    object-storage:
      async-storage:
        storage:
          accessor-factory: mongoClientStorageAccessorFactory
          store-executor: forkJoinAsyncObjectStoreExecutor



