plugins {
    id 'org.ajoberstar.grgit' version '4.0.2' apply false
    id 'org.springframework.boot' version '2.4.4' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'com.baidu.jprotobuf' version "1.0.9" apply false
}

apply from: "${rootDir}/gradle/dependency.gradle"
apply from: "${rootDir}/gradle/git.gradle"

ext {
    moduleProjects = subprojects.findAll { it.name.startsWith("tny-game-") }
    moduleProjects = moduleProjects - project(":tny-game-bom")
    javaProjects = subprojects - project(":tny-game-bom")
//    moduleProjects = moduleProjects - project(":tny-game-bom")
}

configure(allprojects) {
    apply plugin: "idea"
    apply plugin: 'maven'
    apply plugin: "io.spring.dependency-management"

    group 'com.tny.game'
    version "${projectVersion}"

    dependencyManagement {

        imports {
            mavenBom(libs.jackson_bom)
            mavenBom(libs.spring_cloud_dependencies)
            mavenBom(libs.spring_boot_dependencies)
            mavenBom(libs.alibaba_cloud_dependencies)
        }

        dependencies {
            dependency libs.commons_codec
            dependency libs.commons_beanutils
            dependency libs.commons_collections
            dependency libs.commons_collections4
            dependency libs.commons_configuration
            dependency libs.commons_lang
            dependency libs.commons_lang3
            dependency libs.commons_pool2
            dependency libs.rocketmq_spring_boot_starter
            dependency libs.nimbus_oauth2_oidc_sdk
            dependency libs.javassist
            dependency libs.guava
            dependency libs.okio
            dependency libs.okhttp
            dependency libs.okhttp3
            dependency libs.asm
        }

        generatedPomCustomization {
            enabled = false
        }
    }

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://m2.tnydev.com/repository/maven-public/" }
    }


}

configure(moduleProjects) {
    apply plugin: 'java'
    apply plugin: "idea"
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply from: "$rootDir/gradle/publications.gradle"
    apply from: "${rootDir}/gradle/tny-module.gradle"

    ext.springBoot = name.endsWith("-demo") || name.endsWith("-suite") || name.contains("-starter-")

    if (springBoot) {
//        apply plugin: 'org.springframework.boot'
    }

    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    configurations {
        all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
        compile.exclude module: 'spring-boot-starter-logging'//排除对默认logging的依赖
    }


    [compileJava, compileTestJava, javadoc]*.options*.encoding = "${encoding}"


    task createJavaProject {
        doLast {
            sourceSets*.java.srcDirs*.each { it.mkdirs() }
            sourceSets*.resources.srcDirs*.each { it.mkdirs() }
        }
    }

    jar {
        exclude("**.sql", "**.xml", "**.properties")
    }

    dependencies {

        implementation libs.slf4j_api

        testImplementation libs.mockito
        testImplementation libs.junit_jupiter_api
        testImplementation libs.jmock_junit5
        testImplementation libs.spring_test
        testImplementation libs.slf4j_simple
        testImplementation project(":tny-game-tester")

        testRuntimeOnly libs.junit_jupiter_engine
        testRuntimeOnly libs.junit_vintage_engine
        testRuntimeOnly libs.junit_platform_launcher
        testRuntimeOnly libs.junit_platform_commons

    }

//    uploadArchives {
//
//        repositories {
//
//            mavenDeployer {
//
//                pom.groupId = project.group
//                pom.artifactId = project.name
//                pom.version = project.version
//
//                pom.project {
//                    name = project.name
//                    packaging = hasProperty('POM_PACKAGING') ? POM_PACKAGING : "jar"
//                    description = hasProperty("POM_DESCRIPTION") ? POM_DESCRIPTION : "";
//                    url = hasProperty("POM_URL") ? POM_URL : "";
//                }
//
//                repository(url: getReleaseRepositoryUrl()) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }
//                snapshotRepository(url: getSnapshotRepositoryUrl()) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }
//            }
//        }
//
//    }


    idea {
        module {
            inheritOutputDirs = false
            outputDir = compileJava.destinationDir
            testOutputDir = compileTestJava.destinationDir
            downloadJavadoc = false
            downloadSources = false
        }
    }


}